{
  "hash": "6a48d1f9b1f1c55979683e94ea728d2e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: ¿Estrés en las plantas? Un poco de biologia molecular en cítricos\nsubtitle: Participación del etileno en el estrés de lima persa\nauthor:\n  - name: Katya Zaleta\n    email: katyazasa@gmail.com\n    orcid: 0009-0008-5018-7332\n    affiliations:\n      - name: Universidad Veracruzana\nabstract: |\n La lima persa es una especie que naturalmente experimenta estrés causados por factores bióticos y/o abióticos al mismo tiempo. El incremento de la temperatura, la salinización, inundaciones prolongadas, sequía severa, la deficiencia de nutrientes, así como distintas enfermedades generadas por organismos patogénicos provocan una disminución en la producción de este cultivo\n\nkeywords: [Persa, especie, factores]\ncustom-keywords:\n  - name: JEL Codes\n    values: [J16, J22, J31]    \ndate: today\ndate-format: full\nbibliography: references.bib\nformat: \n  html: default\n  docx: default\n  academic-typst:\n    section-numbering: \"1.1.1\"\n    font-paths: [\"./static/fonts\"]\n    mainfont: \"Libertinus Serif\"\n    sansfont: Jost\n    mathfont: \"Libertinus Math\"\n    bibliographystyle: \"chicago-author-date\"\n    include-in-header:\n      - text: '#import \"@preview/mitex:0.2.4\": *'\nexecute: \n  echo: false\n  warning: false\neditor: \n  markdown: \n    wrap: sentence\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Interacción del etileno en el estrés biótico y/o abiótico\n\n![](img/etileno.jpg)\n\nEl etileno es una fitohormona gaseosa que regula el desarrollo vegetal.\nSu producción es inducida por las plantas durante periodos de desarrollo, como es la germinación, maduración de frutos, alargamiento de raíces, abscisión de las hojas y durante la senescencia floral [@abiri2017].\nEl etileno también actúa como señal importante en condiciones de estrés vegetal, ya sea biótico y/o abiótico, su producción puede ser inducida por la invasión de patógenos o bajo condiciones cambiantes del medio ambiente en las plantas.\n\n# Figures and Tables\n\n## Figures\n\nAs @fig-facet shows, the caption is displayed below the figure.\nAs a caption of the figure (`fig-cap`), I use bold text for the title and use a normal text for the description.\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![**Flipper Length and Bill Length of Penguins**.\nThe x-axis shows the flipper length, and the y-axis shows the bill length.](template-full_files/figure-html/fig-facet-1.png){#fig-facet width=576}\n:::\n:::\n\n\n\n\n\nWhen I want to show multiple figures side by side, I use the `patchwork` package.\nThe reason why I don't use the `layout-col` option is that the caption is also split into two parts.\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![**Characteristics of Penguins**.\nThe left panel shows the relationship between flipper length and body mass.\nThe right panel shows the density of flipper length.](template-full_files/figure-html/fig-patchwork-1.png){#fig-patchwork width=576}\n:::\n:::\n\n\n\n\n\n## Tables\n\nYou can use [tinytable](https://vincentarelbundock.github.io/tinytable/) for general tables and [modelsummary](https://vincentarelbundock.github.io/modelsummary/) for regression tables.\nAs @tbl-sum-penguins shows, the caption is displayed above the table.\nThe notes of the table can be added using the `notes` argument of the `tinytable::tt()` function.\n\n\n\n\n\n::: {#tbl-sum-penguins .cell tbl-cap='Summary Statistics of Penguins'}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_6itvh84beocpjthj9sqj(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_6itvh84beocpjthj9sqj\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_6itvh84beocpjthj9sqj');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_6itvh84beocpjthj9sqj(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_6itvh84beocpjthj9sqj\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 0, j: 2 }, { i: 0, j: 1 },  ], css_id: 'tinytable_css_5z1kb7q59cu5eplu4ry3',}, \n          { positions: [ { i: 4, j: 3 }, { i: 4, j: 2 }, { i: 4, j: 0 }, { i: 4, j: 7 }, { i: 4, j: 6 }, { i: 4, j: 1 }, { i: 4, j: 4 }, { i: 4, j: 5 }, { i: 4, j: 8 },  ], css_id: 'tinytable_css_htybi4ci5elgrt2lp1dj',}, \n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 3 }, { i: 0, j: 6 }, { i: 0, j: 5 }, { i: 0, j: 4 }, { i: 0, j: 7 }, { i: 0, j: 8 },  ], css_id: 'tinytable_css_pexspq8msnvx1a9h63z7',}, \n          { positions: [ { i: 1, j: 0 }, { i: 1, j: 3 }, { i: 1, j: 2 }, { i: 1, j: 1 }, { i: 1, j: 4 }, { i: 1, j: 7 }, { i: 1, j: 6 }, { i: 1, j: 5 }, { i: 1, j: 8 },  ], css_id: 'tinytable_css_m3qzfr8l67pp91xn5dbg',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_6itvh84beocpjthj9sqj(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_5z1kb7q59cu5eplu4ry3, .table th.tinytable_css_5z1kb7q59cu5eplu4ry3 { border-top: solid #d3d8dc 0.1em; text-align: center; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_htybi4ci5elgrt2lp1dj, .table th.tinytable_css_htybi4ci5elgrt2lp1dj { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_pexspq8msnvx1a9h63z7, .table th.tinytable_css_pexspq8msnvx1a9h63z7 { border-top: solid #d3d8dc 0.1em; text-align: center; }\n      .table td.tinytable_css_m3qzfr8l67pp91xn5dbg, .table th.tinytable_css_m3qzfr8l67pp91xn5dbg { border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_6itvh84beocpjthj9sqj\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n<tr>\n<th scope=\"col\" align=\"center\" colspan=1> </th>\n<th scope=\"col\" align=\"center\" colspan=4>Male</th>\n<th scope=\"col\" align=\"center\" colspan=4>Female</th>\n</tr>\n        \n              <tr>\n                <th scope=\"col\"></th>\n                <th scope=\"col\">Bill Length (mm)</th>\n                <th scope=\"col\">Bill Depth (mm)</th>\n                <th scope=\"col\">Flipper Length (mm)</th>\n                <th scope=\"col\">Body Mass (g)</th>\n                <th scope=\"col\">Bill Length (mm)</th>\n                <th scope=\"col\">Bill Depth (mm)</th>\n                <th scope=\"col\">Flipper Length (mm)</th>\n                <th scope=\"col\">Body Mass (g)</th>\n              </tr>\n        </thead>\n        <tfoot><tr><td colspan='9'>_Notes_: Data from Palmer penguins dataset.</td></tr></tfoot>\n        <tbody>\n                <tr>\n                  <td>Adelie</td>\n                  <td>40.39</td>\n                  <td>19.07</td>\n                  <td>192.4</td>\n                  <td>4043</td>\n                  <td>37.26</td>\n                  <td>17.62</td>\n                  <td>187.8</td>\n                  <td>3369</td>\n                </tr>\n                <tr>\n                  <td>Gentoo</td>\n                  <td>49.47</td>\n                  <td>15.72</td>\n                  <td>221.5</td>\n                  <td>5485</td>\n                  <td>45.56</td>\n                  <td>14.24</td>\n                  <td>212.7</td>\n                  <td>4680</td>\n                </tr>\n                <tr>\n                  <td>Chinstrap</td>\n                  <td>51.09</td>\n                  <td>19.25</td>\n                  <td>199.9</td>\n                  <td>3939</td>\n                  <td>46.57</td>\n                  <td>17.59</td>\n                  <td>191.7</td>\n                  <td>3527</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n\n\nSince the default backend of `modelsummary` is `tinytable`, you can use the customization options of `tinytable` for `modelsummary`.\nIn @tbl-regression, I use `tinytable::group_tt()` function to group the regression results by the dependent variables\n\n\n\n\n\n::: {#tbl-regression .cell tbl-cap='Regression Results of Penguins'}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_sme8v851rw1asd4q2r1s(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_sme8v851rw1asd4q2r1s\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_sme8v851rw1asd4q2r1s');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_sme8v851rw1asd4q2r1s(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_sme8v851rw1asd4q2r1s\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 0, j: 5 }, { i: 0, j: 6 }, { i: 0, j: 3 }, { i: 0, j: 4 },  ], css_id: 'tinytable_css_oawo8u3eeky0lvifxrjq',}, \n          { positions: [ { i: 10, j: 5 }, { i: 10, j: 3 }, { i: 10, j: 4 }, { i: 10, j: 1 }, { i: 10, j: 2 }, { i: 10, j: 6 },  ], css_id: 'tinytable_css_xf9l2ri2kbe7k5ezw35w',}, \n          { positions: [ { i: 9, j: 5 }, { i: 9, j: 3 }, { i: 9, j: 4 }, { i: 9, j: 1 }, { i: 9, j: 2 }, { i: 9, j: 6 },  ], css_id: 'tinytable_css_5rgfcim5576e27b9xqzt',}, \n          { positions: [ { i: 2, j: 1 }, { i: 6, j: 1 }, { i: 4, j: 1 }, { i: 3, j: 4 }, { i: 8, j: 1 }, { i: 2, j: 2 }, { i: 3, j: 2 }, { i: 4, j: 2 }, { i: 3, j: 1 }, { i: 6, j: 2 }, { i: 5, j: 1 }, { i: 8, j: 2 }, { i: 7, j: 1 }, { i: 3, j: 5 }, { i: 2, j: 4 }, { i: 5, j: 5 }, { i: 2, j: 3 }, { i: 3, j: 3 }, { i: 4, j: 3 }, { i: 5, j: 3 }, { i: 6, j: 3 }, { i: 5, j: 2 }, { i: 8, j: 3 }, { i: 7, j: 2 }, { i: 3, j: 6 }, { i: 2, j: 5 }, { i: 5, j: 6 }, { i: 4, j: 5 }, { i: 7, j: 6 }, { i: 4, j: 4 }, { i: 5, j: 4 }, { i: 6, j: 4 }, { i: 7, j: 4 }, { i: 8, j: 4 }, { i: 7, j: 3 }, { i: 7, j: 5 }, { i: 2, j: 6 }, { i: 4, j: 6 }, { i: 8, j: 6 }, { i: 6, j: 6 }, { i: 6, j: 5 }, { i: 8, j: 5 },  ], css_id: 'tinytable_css_7snojwrru594s4dkpo57',}, \n          { positions: [ { i: 0, j: 2 }, { i: 0, j: 1 },  ], css_id: 'tinytable_css_0vg5mula5jseq6urppuy',}, \n          { positions: [ { i: 1, j: 1 }, { i: 1, j: 5 }, { i: 1, j: 6 }, { i: 1, j: 3 }, { i: 1, j: 4 }, { i: 1, j: 2 },  ], css_id: 'tinytable_css_ufdvih9vq3gf840q4drf',}, \n          { positions: [ { i: 10, j: 0 },  ], css_id: 'tinytable_css_yj586e2tlcawrij6onm3',}, \n          { positions: [ { i: 9, j: 0 },  ], css_id: 'tinytable_css_1k14nfy0jglt4ld7ilx8',}, \n          { positions: [ { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 4, j: 0 }, { i: 5, j: 0 }, { i: 6, j: 0 }, { i: 7, j: 0 }, { i: 8, j: 0 },  ], css_id: 'tinytable_css_1hyyyju8mec3ywvwwrx1',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_mo4bqr8bs75axyb1xyu4',}, \n          { positions: [ { i: 1, j: 0 },  ], css_id: 'tinytable_css_3y3dxcwtywcfdp6hgas7',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_sme8v851rw1asd4q2r1s(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_oawo8u3eeky0lvifxrjq, .table th.tinytable_css_oawo8u3eeky0lvifxrjq { text-align: center; border-top: solid #d3d8dc 0.1em; text-align: center; }\n      .table td.tinytable_css_xf9l2ri2kbe7k5ezw35w, .table th.tinytable_css_xf9l2ri2kbe7k5ezw35w { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_5rgfcim5576e27b9xqzt, .table th.tinytable_css_5rgfcim5576e27b9xqzt { text-align: center; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_7snojwrru594s4dkpo57, .table th.tinytable_css_7snojwrru594s4dkpo57 { text-align: center; }\n      .table td.tinytable_css_0vg5mula5jseq6urppuy, .table th.tinytable_css_0vg5mula5jseq6urppuy { text-align: center; border-top: solid #d3d8dc 0.1em; text-align: center; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_ufdvih9vq3gf840q4drf, .table th.tinytable_css_ufdvih9vq3gf840q4drf { text-align: center; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_yj586e2tlcawrij6onm3, .table th.tinytable_css_yj586e2tlcawrij6onm3 { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_1k14nfy0jglt4ld7ilx8, .table th.tinytable_css_1k14nfy0jglt4ld7ilx8 { text-align: left; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_1hyyyju8mec3ywvwwrx1, .table th.tinytable_css_1hyyyju8mec3ywvwwrx1 { text-align: left; }\n      .table td.tinytable_css_mo4bqr8bs75axyb1xyu4, .table th.tinytable_css_mo4bqr8bs75axyb1xyu4 { text-align: left; border-top: solid #d3d8dc 0.1em; text-align: center; }\n      .table td.tinytable_css_3y3dxcwtywcfdp6hgas7, .table th.tinytable_css_3y3dxcwtywcfdp6hgas7 { text-align: left; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_sme8v851rw1asd4q2r1s\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n<tr>\n<th scope=\"col\" align=\"center\" colspan=1> </th>\n<th scope=\"col\" align=\"center\" colspan=3>Bill Length (mm)</th>\n<th scope=\"col\" align=\"center\" colspan=3>Body Mass (g)</th>\n</tr>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">(1)</th>\n                <th scope=\"col\">(2)</th>\n                <th scope=\"col\">(3)</th>\n                <th scope=\"col\">(4)</th>\n                <th scope=\"col\">(5)</th>\n                <th scope=\"col\">(6)</th>\n              </tr>\n        </thead>\n        <tfoot><tr><td colspan='7'>+ p < 0.1, * p < 0.05, ** p < 0.01</td></tr>\n<tr><td colspan='7'>_Notes_: Data from Palmer penguins dataset.</td></tr></tfoot>\n        <tbody>\n                <tr>\n                  <td>Chinstrap</td>\n                  <td>10.042**</td>\n                  <td>10.010**</td>\n                  <td>10.037**</td>\n                  <td>32.426</td>\n                  <td>26.924</td>\n                  <td>27.229</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.432)</td>\n                  <td>(0.341)</td>\n                  <td>(0.340)</td>\n                  <td>(67.512)</td>\n                  <td>(46.483)</td>\n                  <td>(46.587)</td>\n                </tr>\n                <tr>\n                  <td>Gentoo</td>\n                  <td>8.713**</td>\n                  <td>8.698**</td>\n                  <td>8.693**</td>\n                  <td>1375.354**</td>\n                  <td>1377.858**</td>\n                  <td>1377.813**</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.360)</td>\n                  <td>(0.287)</td>\n                  <td>(0.286)</td>\n                  <td>(56.148)</td>\n                  <td>(39.104)</td>\n                  <td>(39.163)</td>\n                </tr>\n                <tr>\n                  <td>Male</td>\n                  <td></td>\n                  <td>3.694**</td>\n                  <td>3.694**</td>\n                  <td></td>\n                  <td>667.555**</td>\n                  <td>667.560**</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.255)</td>\n                  <td>(0.254)</td>\n                  <td></td>\n                  <td>(34.704)</td>\n                  <td>(34.755)</td>\n                </tr>\n                <tr>\n                  <td>Year</td>\n                  <td></td>\n                  <td></td>\n                  <td>0.324*</td>\n                  <td></td>\n                  <td></td>\n                  <td>3.629</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>(0.156)</td>\n                  <td></td>\n                  <td></td>\n                  <td>(21.428)</td>\n                </tr>\n                <tr>\n                  <td>Observations</td>\n                  <td>342</td>\n                  <td>333</td>\n                  <td>333</td>\n                  <td>342</td>\n                  <td>333</td>\n                  <td>333</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n\n\nWhile `tinytable` generates compatible tables between LaTeX and Typst, it does not support LaTeX math expressions for Typst tables.\nI think the compatibility between LaTeX and Typst is crucial for academic writing because it guarantees that the document can be easily converted to LaTeX for submission to journals.\n\nA workaround is to use [MiTeX](https://typst.app/universe/package/mitex/), a Typst package that allows you to use LaTeX math expressions in Typst.\nI write a custom theme for `tinytable` to convert LaTeX math expressions to MiTeX expressions.\nThe following table includes LaTeX math expressions but will be converted to MiTeX expressions in the Typst output.\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {#tbl-math .cell tbl-cap='Math Symbols'}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <!-- tinytable mathjax start -->\n    <script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n    <script>\n    MathJax = {\n      tex: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n      },\n      svg: {\n        fontCache: 'global'\n      }\n    };\n    </script>\n    <!-- tinytable mathjax end -->\n\n    <script>\n\n      function styleCell_r6vvszhuvxsf3azbithr(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_r6vvszhuvxsf3azbithr\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_r6vvszhuvxsf3azbithr');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_r6vvszhuvxsf3azbithr(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_r6vvszhuvxsf3azbithr\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 3, j: 0 },  ], css_id: 'tinytable_css_0igjzu5d6ma1gj42jnji',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_psuchcps4ynsx6lz4gq0',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_r6vvszhuvxsf3azbithr(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_0igjzu5d6ma1gj42jnji, .table th.tinytable_css_0igjzu5d6ma1gj42jnji { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_psuchcps4ynsx6lz4gq0, .table th.tinytable_css_psuchcps4ynsx6lz4gq0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_r6vvszhuvxsf3azbithr\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\">Math</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>$\\alpha$</td>\n                </tr>\n                <tr>\n                  <td>$a_{it}$</td>\n                </tr>\n                <tr>\n                  <td>$e^{i\\pi} + 1 = 0$</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n\n\n# Last words\n\nI made this template for my working papers, so it may not be suitable for other fields than economics.\nI am happy to receive feedback and suggestions for improvement.\n\n\n\n\n\n{{< appendix >}}\n\n\n\n\n\n\n\n\n# Supplemental Figures\n\nThe section numbering will be changed to \"A.1.1\" in the appendix.\nThe second section in the appendix will be \"B\".\nOn the other hand, the figure numbering will be reset to \"A.1\", \"A.2\" so that it is clear that these figures are part of the appendix.\nThe \"A\" stands for the \"Appendix\", not the section numbering.\n\n\n\n\n\n{{< pagebreak >}} \n\n",
    "supporting": [
      "template-full_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}